{"ast":null,"code":"import _toConsumableArray from \"/Users/julienassouline/Documents/538_dashboard/endorsements/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/julienassouline/Documents/538_dashboard/endorsements/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/julienassouline/Documents/538_dashboard/endorsements/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/julienassouline/Documents/538_dashboard/endorsements/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/julienassouline/Documents/538_dashboard/endorsements/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/julienassouline/Documents/538_dashboard/endorsements/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/julienassouline/Documents/538_dashboard/endorsements/src/GridMap.js\";\nimport gridData from \"./endorsements_analysed.csv\";\n\nvar React = require(\"react\");\n\nvar d3 = require(\"d3\");\n\nvar GridMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GridMap, _React$Component);\n\n  function GridMap() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GridMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GridMap)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gridData: []\n    };\n    return _this;\n  }\n\n  _createClass(GridMap, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      d3.csv(gridData).then(function (gridData) {\n        gridData.forEach(function (d) {\n          d.points = +d.points;\n          d.x = d.x;\n          d.points_y = +d.points_y;\n        });\n\n        _this2.setState({\n          gridData: gridData\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var width = 45;\n      var height = 45;\n      var gridData = this.state.gridData;\n      var booker_data = gridData.filter(function (d) {\n        return d.endorsee === \"Cory Booker\";\n      });\n      var points_state_array = gridData.map(function (d) {\n        return d.points_x;\n      });\n      var max = Math.max.apply(Math, _toConsumableArray(points_state_array));\n      var min = Math.min.apply(Math, _toConsumableArray(points_state_array));\n      console.log(min, max);\n      var color = d3.scaleQuantize().domain([0, 24]).range(['#b2ddf0', '#92bcd8', '#769cbf', '#5d7da7', '#46608f', '#334577', '#232d5f']);\n      var rectScale = d3.scaleLinear().domain(d3.extent(gridData, function (d) {\n        console.log(d);\n        return +d.points_x;\n      })).range([1, 11]);\n      console.log(gridData);\n      var gridmap = gridData.map(function (d, i) {\n        return React.createElement(\"g\", {\n          key: \"grid\" + i,\n          transform: \"translate(\" + d.x * width + \",\" + d.y * height + \")\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"rect\", {\n          width: rectScale(width),\n          height: rectScale(height),\n          style: {\n            fill: color(d.points_by_state),\n            stroke: \"lightgrey\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), React.createElement(\"text\", {\n          textAnchor: \"middle\",\n          x: width / 2,\n          y: height / 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \" \", d.state, \" \"));\n      });\n      return React.createElement(\"svg\", {\n        width: 12 * width,\n        height: 12 * height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"g\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, gridmap));\n    }\n  }]);\n\n  return GridMap;\n}(React.Component);\n\nexport default GridMap;","map":{"version":3,"sources":["/Users/julienassouline/Documents/538_dashboard/endorsements/src/GridMap.js"],"names":["gridData","React","require","d3","GridMap","state","csv","then","forEach","d","points","x","points_y","setState","width","height","booker_data","filter","endorsee","points_state_array","map","points_x","max","Math","min","console","log","color","scaleQuantize","domain","range","rectScale","scaleLinear","extent","gridmap","i","y","fill","points_by_state","stroke","Component"],"mappings":"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","sourcesContent":["import gridData from \"./endorsements_analysed.csv\"\nvar React = require(\"react\")\nvar d3 = require(\"d3\")\n\nclass GridMap extends React.Component {\n\n  state = {\n    gridData: [],\n  }\n\n  componentWillMount() {\n    d3.csv(gridData)\n      .then(gridData => {\n\n        gridData.forEach(d => {\n          d.points = +d.points\n          d.x = (d.x)\n          d.points_y = +d.points_y\n        }\n          )\n\n        this.setState({\n          gridData\n        })\n\n      })\n  }\n\n  render() {\n    const width = 45\n    const height = 45\n\n    const { gridData } = this.state\n\n    const booker_data = gridData.filter((d) => d.endorsee === \"Cory Booker\")\n\n    const points_state_array = gridData.map(d => d.points_x);\n\n    const max = Math.max(...points_state_array)\n    const min = Math.min(...points_state_array)\n\n    console.log(min, max)\n\n\n    var color = d3.scaleQuantize()\n      .domain([0, 24])\n      .range(['#b2ddf0', '#92bcd8', '#769cbf', '#5d7da7', '#46608f', '#334577', '#232d5f'])\n\n    var rectScale = d3.scaleLinear()\n           .domain(d3.extent(gridData, function(d){ console.log(d); return +d.points_x}))\n           .range([1, 11])\n\n      console.log(gridData)\n\n    const gridmap = gridData.map((d,i) =>\n      <g key = {\"grid\" + i} transform={\"translate(\" + (d.x * width) + \",\" + (d.y * height) + \")\"}>\n        <rect\n          width = {rectScale(width) }\n          height = { rectScale(height)  }\n          style = {{\n            fill : color(d.points_by_state),\n            stroke: \"lightgrey\"\n          }}\n        />\n        <text\n          textAnchor=\"middle\"\n          x = {width/2}\n          y = {height/2}\n        > {d.state} </text>\n      </g>\n\n      )\n\n    return (\n      <svg width = {12 * width} height = {12 * height}>\n      <g>\n      { gridmap }\n      </g>\n      </svg>\n      )\n  }\n}\n\nexport default GridMap"]},"metadata":{},"sourceType":"module"}