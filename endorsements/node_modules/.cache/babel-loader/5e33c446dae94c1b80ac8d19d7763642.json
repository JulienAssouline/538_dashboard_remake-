{"ast":null,"code":"import _classCallCheck from \"/Users/julienassouline/Documents/538_dashboard/endorsements/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/julienassouline/Documents/538_dashboard/endorsements/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/julienassouline/Documents/538_dashboard/endorsements/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/julienassouline/Documents/538_dashboard/endorsements/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/julienassouline/Documents/538_dashboard/endorsements/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/julienassouline/Documents/538_dashboard/endorsements/src/GridMap.js\";\nimport gridData from \"./endorsements_analysed.csv\";\n\nvar React = require(\"react\");\n\nvar d3 = require(\"d3\");\n\nvar GridMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GridMap, _React$Component);\n\n  function GridMap() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GridMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GridMap)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gridData: []\n    };\n    return _this;\n  }\n\n  _createClass(GridMap, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      d3.csv(gridData).then(function (gridData) {\n        gridData.forEach(function (d) {\n          return d.points = +d.points;\n        });\n\n        _this2.setState({\n          gridData: gridData\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var width = 45;\n      var height = 45;\n      var gridData = this.state.gridData;\n      var rectScale = d3.scaleLinear().domain(d3.extent(gridData, function (d) {\n        return d.points;\n      })).range([2, 40]);\n      console.log(gridData);\n      var gridmap = gridData.map(function (d, i) {\n        return React.createElement(\"g\", {\n          key: \"grid\" + i,\n          transform: \"translate(\" + d.x * width + \",\" + d.y * height + \")\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"rect\", {\n          width: rectScale(width),\n          height: rectScale(height),\n          style: {\n            fill: \"white\",\n            stroke: \"lightgrey\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }), React.createElement(\"text\", {\n          textAnchor: \"middle\",\n          x: width / 2,\n          y: height / 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \" \", d.state, \" \"));\n      });\n      return React.createElement(\"svg\", {\n        width: 12 * width,\n        height: 8 * height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"g\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, gridmap));\n    }\n  }]);\n\n  return GridMap;\n}(React.Component);\n\nexport default GridMap;","map":{"version":3,"sources":["/Users/julienassouline/Documents/538_dashboard/endorsements/src/GridMap.js"],"names":["gridData","React","require","d3","GridMap","state","csv","then","forEach","d","points","setState","width","height","rectScale","scaleLinear","domain","extent","range","console","log","gridmap","map","i","x","y","fill","stroke","Component"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,6BAArB;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;IAEME,O;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNL,MAAAA,QAAQ,EAAE;AADJ,K;;;;;;yCAIa;AAAA;;AACnBG,MAAAA,EAAE,CAACG,GAAH,CAAON,QAAP,EACGO,IADH,CACQ,UAAAP,QAAQ,EAAI;AAEhBA,QAAAA,QAAQ,CAACQ,OAAT,CAAiB,UAAAC,CAAC;AAAA,iBAChBA,CAAC,CAACC,MAAF,GAAW,CAACD,CAAC,CAACC,MADE;AAAA,SAAlB;;AAIA,QAAA,MAAI,CAACC,QAAL,CAAc;AACZX,UAAAA,QAAQ,EAARA;AADY,SAAd;AAID,OAXH;AAYD;;;6BAEQ;AACP,UAAMY,KAAK,GAAG,EAAd;AACA,UAAMC,MAAM,GAAG,EAAf;AAFO,UAICb,QAJD,GAIc,KAAKK,KAJnB,CAICL,QAJD;AAMP,UAAIc,SAAS,GAAGX,EAAE,CAACY,WAAH,GACbC,MADa,CACNb,EAAE,CAACc,MAAH,CAAUjB,QAAV,EAAoB,UAAAS,CAAC;AAAA,eAAKA,CAAC,CAACC,MAAP;AAAA,OAArB,CADM,EAEbQ,KAFa,CAEP,CAAC,CAAD,EAAI,EAAJ,CAFO,CAAhB;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYpB,QAAZ;AACA,UAAMqB,OAAO,GAAGrB,QAAQ,CAACsB,GAAT,CAAa,UAACb,CAAD,EAAGc,CAAH;AAAA,eAC3B;AAAG,UAAA,GAAG,EAAI,SAASA,CAAnB;AAAsB,UAAA,SAAS,EAAE,eAAgBd,CAAC,CAACe,CAAF,GAAMZ,KAAtB,GAA+B,GAA/B,GAAsCH,CAAC,CAACgB,CAAF,GAAMZ,MAA5C,GAAsD,GAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,KAAK,EAAIC,SAAS,CAACF,KAAD,CADpB;AAEE,UAAA,MAAM,EAAKE,SAAS,CAACD,MAAD,CAFtB;AAGE,UAAA,KAAK,EAAI;AACPa,YAAAA,IAAI,EAAG,OADA;AAEPC,YAAAA,MAAM,EAAE;AAFD,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EASE;AACE,UAAA,UAAU,EAAC,QADb;AAEE,UAAA,CAAC,EAAIf,KAAK,GAAC,CAFb;AAGE,UAAA,CAAC,EAAIC,MAAM,GAAC,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAIGJ,CAAC,CAACJ,KAJL,MATF,CAD2B;AAAA,OAAb,CAAhB;AAmBA,aACE;AAAK,QAAA,KAAK,EAAI,KAAKO,KAAnB;AAA0B,QAAA,MAAM,EAAI,IAAIC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEQ,OADF,CADA,CADF;AAOD;;;;EA1DmBpB,KAAK,CAAC2B,S;;AA6D5B,eAAexB,OAAf","sourcesContent":["import gridData from \"./endorsements_analysed.csv\"\nvar React = require(\"react\")\nvar d3 = require(\"d3\")\n\nclass GridMap extends React.Component {\n\n  state = {\n    gridData: [],\n  }\n\n  componentWillMount() {\n    d3.csv(gridData)\n      .then(gridData => {\n\n        gridData.forEach(d =>\n          d.points = +d.points\n          )\n\n        this.setState({\n          gridData\n        })\n\n      })\n  }\n\n  render() {\n    const width = 45\n    const height = 45\n\n    const { gridData } = this.state\n\n    var rectScale = d3.scaleLinear()\n      .domain(d3.extent(gridData, d =>  d.points))\n      .range([2, 40])\n\n    console.log(gridData)\n    const gridmap = gridData.map((d,i) =>\n      <g key = {\"grid\" + i} transform={\"translate(\" + (d.x * width) + \",\" + (d.y * height) + \")\"}>\n        <rect\n          width = {rectScale(width)}\n          height = { rectScale(height) }\n          style = {{\n            fill : \"white\",\n            stroke: \"lightgrey\"\n          }}\n        />\n        <text\n          textAnchor=\"middle\"\n          x = {width/2}\n          y = {height/2}\n        > {d.state} </text>\n      </g>\n\n      )\n\n    return (\n      <svg width = {12 * width} height = {8 * height}>\n      <g>\n      { gridmap }\n      </g>\n      </svg>\n      )\n  }\n}\n\nexport default GridMap"]},"metadata":{},"sourceType":"module"}